{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","placeholder","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","backgroundColor","value","onChange","event","console","log","target","rows","newText","toUpperCase","showAlert","toLowerCase","msg","SpeechSynthesisUtterance","window","speechSynthesis","speak","arr","split","forEach","element","charAt","slice","firstL","join","document","getElementById","select","navigator","clipboard","writeText","rems","length","Alert","alert","word","lower","capitalize","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","about","Components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","react_router_dom","src_App"],"mappings":"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","file":"static/js/main.5cd58857.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n        // className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} navbar-${props.yMode} bg-${props.yMode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav mb-2 mb-lg-0 \">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  Home\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <a className=\"nav-link\" href=\"/about\">\r\n                  {props.about}\r\n                </a> */}\r\n              </li>\r\n            </ul>\r\n            <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control mx-1\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              onClick={props.toggleMode}\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label me-5\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Blue Mode\r\n            </label>\r\n          </div>\r\n          {/* <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n              <input\r\n                onClick={props.toggleYellowMode}\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                id=\"flexSwitchCheckDefault\"\r\n              />\r\n              <label className=\"form-check-label me-5\" htmlFor=\"flexSwitchCheckDefault\">\r\n                Yellow Mode\r\n              </label>\r\n            </div> */}\r\n        </div>\r\n      </nav>\r\n      {/* <div>I love you Anshi</div> */}\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string.isRequired,\r\n};\r\n\r\n// Navbar.defaultProps = {\r\n//   title: \"Yash\",\r\n//   about: \"Anshi\"\r\n// }\r\n","import React, { useState } from \"react\";\r\n// import { arrayify } from \"update/lib/utils\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = ()=> {\r\n       console.log(\"Uppercase was clicked\");\r\n       let newText = text.toUpperCase();\r\n       setText(newText);\r\n       props.showAlert('Converted to Upper-Case', 'success')\r\n  }\r\n  const handleLoClick = ()=> {\r\n       console.log(\"Lowercase was clicked\");\r\n       let newText = text.toLowerCase();\r\n       setText(newText);\r\n       props.showAlert('Converted to Lower-Case', 'success')\r\n  }\r\n  const handleClearClick = ()=> {\r\n    console.log(\"Text has been removed\");\r\n    let newText = ''; \r\n    setText(newText);\r\n    props.showAlert('Text has been removed', 'danger')\r\n\r\n}\r\nconst handleCopy =()=>{\r\n  let text = document.getElementById(\"myBox\");\r\n   text.select();\r\n  //  text.setSelectionRange(0,999);\r\n   navigator.clipboard.writeText(text.value);\r\n   props.showAlert('Text is Copied', 'success')\r\n}\r\n\r\nconst removeSpaces =()=> {\r\n  let rems = text.split(/[ ]+/);\r\n  setText(rems.join(\" \")) ;\r\n}\r\n\r\n  const handleFirstClick = ()=> {\r\n\r\n    const arr =  text.split(\" \");\r\n    // let firstL = \"\";\r\n     arr.forEach(element => {\r\n        element = element.charAt(0).toUpperCase() + element.slice(1);\r\n     });\r\n     const firstL = arr.join(\" \");\r\n     setText(firstL);\r\n}\r\n  const speak = ()=> {\r\n    let msg = new SpeechSynthesisUtterance();\r\n    msg.text = text;\r\n    window.speechSynthesis.speak(msg);\r\n  }\r\n\r\n  const handleOnChange = (event)=> {\r\n    console.log(\"On change\")\r\n     setText(event.target.value)\r\n    \r\n  }\r\n  \r\n  \r\n  const [text, setText] = useState(\"Enter Text here\");\r\n  // text = 'new text'; Wrong way to change the state\r\n  // setText(\"Yash\"); correct way to change the state \r\n  return (\r\n    <><div >\r\n    <h2 className=\"my-2  mt-5\" style={{color: props.mode===\"dark\"?'white':'black'}}>{props.heading}</h2>\r\n    <div className=\"mb-3\">\r\n      <textarea\r\n         style={{backgroundColor: props.mode===\"light\"?'white':'rgb(19 21 46 / 25%)', color: props.mode===\"dark\"?'white':'black'}}\r\n        className=\"form-control\"\r\n        value={text}\r\n        // placeholder=\"Enter text here\"\r\n        onChange={handleOnChange}\r\n        id=\"myBox\"\r\n        rows=\"8\"\r\n      ></textarea>\r\n    </div>\r\n    <button className=\"btn btn-primary upperCase mx-1\" onClick={handleUpClick} >\r\n    Captial\r\n    </button>\r\n    <button className=\"btn btn-primary lowerCase mx-1\" onClick={handleLoClick}>\r\n    Small\r\n    </button>\r\n    <button className=\"btn btn-primary lowerCase mx-1\" onClick={handleClearClick}>\r\n    Remove\r\n    </button>\r\n    <button className=\"btn btn-primary lowerCase mx-1 bg-primary\" onClick={speak} type=\"submit\" >\r\n     Speak\r\n    </button>\r\n    <button className=\"btn btn-primary lowerCase mx-1\" onClick={handleFirstClick} type=\"submit\" >\r\n    First Letter Capital\r\n    </button>\r\n    <button className=\"btn btn-primary lowerCase mx-1\" onClick={handleCopy} type=\"submit\" >\r\n    Copy Text \r\n    </button>\r\n    <button className=\"btn btn-primary lowerCase mx-1\" onClick={removeSpaces} type=\"submit\" >\r\n    Remove Extra Spaces\r\n    </button>\r\n  </div>\r\n  <div className=\"container my-3\" toggleMode={props.toggleMode} style={{color: props.mode==='dark'?'white':'black'}}>\r\n    <h1>Your text Summary</h1>\r\n    <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n    <p>{0.008*text.split(\" \").length} Minutes Read</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0?text:\"Please Enter something above to see the Preview\"}</p>\r\n  </div>\r\n  </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize =(word)=>{\r\n       const lower = word.toLowerCase();\r\n       return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n     \r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n\r\n\r\n\r\n","// import logo from './logo.svg';\nimport \"./App.css\";\nimport Navbar from \"./Components/Navbar\";\nimport React, { useState } from \"react\";\nimport TextForm from \"./Components/TextForm\";\n// import About from \"./Components/About\";\nimport Alert from \"./Components/Alert\";\n\n// import { Routes, Route , Link } from \"react-router-dom\";\n\n// let anshi = \"Love\";\n// console.log(anshi);\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#13224a\";\n      showAlert(\"Dark Mode has been Enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n\n      // To Make an Advertisement\n      // setInterval(() => {\n      //   document.title = 'Install TextUtils Now'\n      // }, 2000);\n\n      // setInterval(() => {\n      //   document.title = 'TextUtils is Amazing'\n      // }, 1500);\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been Enabled\", \"success\");\n      document.title = \"TextUtitls - Light Mode\";\n    }\n  };\n\n  //Yellow Mode - Failed One\n  // const [yMode, setYMode] = useState(\"light\");\n  // const toggleYellowMode =()=>{\n  //     if (yMode === \"light\"){\n  //       setYMode('warning');\n  //       document.body.style.backgroundColor='#f5f5d1';\n  //       showAlert('Yellow Mode has been Enabled', 'success')\n  //     }\n  //    else {\n  //     setYMode('light');\n  //     document.body.style.backgroundColor='white';\n  //     showAlert('Light Mode has been Enabled', 'success')\n  //   }\n  // }\n\n  //Alert State\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n  };\n  setTimeout(() => {\n    setAlert(null);\n  }, 5000);\n\n  return (\n    <>\n      {/* <Navbar/> */}\n\n      {/* <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}  yMode={yMode}toggleYellowMode={toggleYellowMode} about=\"Anshi\"/> */}\n      <Navbar\n        title=\"TextUtils\"\n        mode={mode}\n        toggleMode={toggleMode}\n        about=\"About\"\n      />\n      <Alert alert={alert} />\n\n      <div className=\"container mt-4\">\n      <TextForm\n                heading=\"Enter the Text to analyze\"\n                mode={mode}\n                showAlert={showAlert}\n              />\n        {/* <Routes>\n          <Route\n            path=\"/about\"\n            element={<About heading=\"About us\" mode={mode} />}\n          /> */}\n          {/* <Route\n            path=\"/home\"\n            element={\n             \n            }\n          />\n        </Routes> */}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}